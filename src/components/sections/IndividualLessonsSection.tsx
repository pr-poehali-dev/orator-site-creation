import { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

const IndividualLessonsSection = () => {
  const { toast } = useToast();
  const [isOpen, setIsOpen] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    format: 'online',
    topic: '',
    preferredDate: '',
    preferredTime: '',
    message: ''
  });

  const services = [
    {
      icon: 'Presentation',
      title: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—é',
      description: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ—á–∏, —Ä–∞–±–æ—Ç–∞ —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º, –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è'
    },
    {
      icon: 'MessageSquare',
      title: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –æ—Ä–∞—Ç–æ—Ä—Å–∫–æ–º—É –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É',
      description: '–†–∞–∑–±–æ—Ä –≤–∞—à–∏—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è'
    },
    {
      icon: 'Zap',
      title: '–†–∞–∑–≤–∏—Ç–∏–µ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏',
      description: '–¢–µ—Ö–Ω–∏–∫–∏ —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ–π —Ä–µ—á–∏, —Ä–∞–±–æ—Ç–∞ —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏'
    },
    {
      icon: 'Mic',
      title: '–†–∞–±–æ—Ç–∞ —Å –≥–æ–ª–æ—Å–æ–º –∏ —Ä–µ—á—å—é',
      description: '–î–∏–∫—Ü–∏—è, –∏–Ω—Ç–æ–Ω–∞—Ü–∏–∏, –¥—ã—Ö–∞–Ω–∏–µ, —Å–∏–ª–∞ –∏ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞'
    }
  ];

  const timeSlots = [
    '09:00 - 10:00',
    '10:00 - 11:00',
    '11:00 - 12:00',
    '12:00 - 13:00',
    '14:00 - 15:00',
    '15:00 - 16:00',
    '16:00 - 17:00',
    '17:00 - 18:00',
    '18:00 - 19:00',
    '19:00 - 20:00'
  ];

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    try {
      const now = new Date();
      const timestamp = now.toLocaleString('ru-RU', { 
        day: '2-digit', 
        month: '2-digit', 
        year: 'numeric',
        hour: '2-digit', 
        minute: '2-digit'
      });

      const formatText = formData.format === 'online' ? '–û–Ω–ª–∞–π–Ω (WhatsApp, Zoom, Skype –∏ –¥—Ä.)' : '–û—Ñ—Ñ–ª–∞–π–Ω (–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä)';
      const message = `üìù –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–û–ï –ó–ê–ù–Ø–¢–ò–ï
‚è∞ –í—Ä–µ–º—è –∑–∞—è–≤–∫–∏: ${timestamp}

–§–æ—Ä–º–∞—Ç: ${formatText}
–¢–µ–º–∞: ${formData.topic}
${formData.preferredDate ? `–ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: ${formData.preferredDate}` : ''}
${formData.preferredTime ? `–ñ–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è: ${formData.preferredTime}` : ''}
${formData.message ? `\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: ${formData.message}` : ''}`;

      const response = await fetch('https://functions.poehali.dev/2708494c-3d0e-4905-b18f-86093217671b', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name: formData.name,
          phone: formData.phone,
          message: message
        }),
      });
      
      if (response.ok) {
        toast({
          title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
          description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–Ω—è—Ç–∏—è.",
        });
        
        setFormData({
          name: '',
          phone: '',
          email: '',
          format: 'online',
          topic: '',
          preferredDate: '',
          preferredTime: '',
          message: ''
        });
        
        setIsOpen(false);
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
          description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ WhatsApp",
          variant: "destructive"
        });
      }
    } catch (error) {
      console.error('Error submitting form:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
        description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ WhatsApp",
        variant: "destructive"
      });
    }
  };

  const handleChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  return (
    <section className="py-12 px-4 bg-white" id="individual">
      <div className="container mx-auto max-w-6xl">
        <div className="text-center mb-8">
          <h2 className="text-3xl md:text-4xl font-bold mb-3">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è</h2>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ø–µ–¥–∞–≥–æ–≥–æ–º ‚Äî —Å–∞–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤. 
            –ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –æ—Ñ—Ñ–ª–∞–π–Ω –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
          {services.map((service, index) => (
            <Card key={index} className="hover:shadow-lg transition-shadow">
              <CardContent className="p-4 text-center">
                <div className="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Icon name={service.icon as any} size={24} className="text-primary" />
                </div>
                <h3 className="font-bold text-base mb-2">{service.title}</h3>
                <p className="text-xs text-muted-foreground">{service.description}</p>
              </CardContent>
            </Card>
          ))}
        </div>

        <Card className="bg-gradient-to-r from-primary/5 to-purple-50 border-primary/20">
          <CardContent className="p-6 md:p-8">
            <div className="grid md:grid-cols-2 gap-6 items-center">
              <div>
                <h3 className="text-2xl font-bold mb-3">–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–Ω—è—Ç–∏—è</h3>
                <div className="flex items-baseline gap-3 mb-4">
                  <span className="text-4xl font-bold text-primary">4 000 ‚ÇΩ</span>
                  <span className="text-xl text-muted-foreground line-through">5 000 ‚ÇΩ</span>
                </div>
                <div className="space-y-2 mb-4">
                  <div className="flex items-start gap-2">
                    <Icon name="Clock" size={18} className="text-primary mt-0.5" />
                    <span className="text-sm">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 60 –º–∏–Ω—É—Ç</span>
                  </div>
                  <div className="flex items-start gap-2">
                    <Icon name="Monitor" size={18} className="text-primary mt-0.5" />
                    <span className="text-sm">–§–æ—Ä–º–∞—Ç: –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –æ—á–Ω–æ –≤ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–µ</span>
                  </div>
                  <div className="flex items-start gap-2">
                    <Icon name="Calendar" size={18} className="text-primary mt-0.5" />
                    <span className="text-sm">–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫: –≤—ã–±–∏—Ä–∞–π—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è</span>
                  </div>
                </div>

                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
                  <div className="flex items-start gap-2">
                    <Icon name="Sparkles" size={18} className="text-yellow-600 mt-0.5" />
                    <div>
                      <p className="font-semibold text-yellow-800 text-sm mb-1">–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</p>
                      <p className="text-xs text-yellow-700">
                        –°–∫–∏–¥–∫–∞ 1000 ‚ÇΩ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞. –£—Å–ø–µ–π—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ!
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <div className="bg-white rounded-lg p-4 shadow-sm mb-4">
                  <h4 className="font-bold text-lg mb-3 flex items-center gap-2">
                    <Icon name="Target" size={20} className="text-primary" />
                    –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ
                  </h4>
                  <ul className="space-y-2 text-sm">
                    <li className="flex items-start gap-2">
                      <Icon name="Check" size={16} className="text-primary mt-0.5" />
                      <span>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è –Ω–∞–≤—ã–∫–æ–≤</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Icon name="Check" size={16} className="text-primary mt-0.5" />
                      <span>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ —Ç–µ—Ö–Ω–∏–∫–∏</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Icon name="Check" size={16} className="text-primary mt-0.5" />
                      <span>–ê–Ω–∞–ª–∏–∑ –∏ —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –æ—à–∏–±–∫–∞–º–∏</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Icon name="Check" size={16} className="text-primary mt-0.5" />
                      <span>–ó–∞–ø–∏—Å—å –∑–∞–Ω—è—Ç–∏—è –¥–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã</span>
                    </li>
                    <li className="flex items-start gap-2">
                      <Icon name="Check" size={16} className="text-primary mt-0.5" />
                      <span>–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π</span>
                    </li>
                  </ul>
                </div>

                <Dialog open={isOpen} onOpenChange={setIsOpen}>
                  <DialogTrigger asChild>
                    <Button size="lg" className="w-full group">
                      –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ
                      <Icon name="ArrowRight" size={18} className="ml-2 group-hover:translate-x-1 transition-transform" />
                    </Button>
                  </DialogTrigger>
                  <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
                    <DialogHeader>
                      <DialogTitle className="text-2xl">–ó–∞–ø–∏—Å—å –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ</DialogTitle>
                    </DialogHeader>
                    <form onSubmit={handleSubmit} className="space-y-6 mt-4">
                      <div className="grid md:grid-cols-2 gap-4">
                        <div className="space-y-2">
                          <Label htmlFor="name">–í–∞—à–µ –∏–º—è *</Label>
                          <Input
                            id="name"
                            required
                            value={formData.name}
                            onChange={(e) => handleChange('name', e.target.value)}
                            placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                          />
                        </div>
                        <div className="space-y-2">
                          <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                          <Input
                            id="phone"
                            type="tel"
                            required
                            value={formData.phone}
                            onChange={(e) => handleChange('phone', e.target.value)}
                            placeholder="+7 (999) 123-45-67"
                          />
                        </div>
                      </div>

                      <div className="space-y-2">
                        <Label htmlFor="email">Email</Label>
                        <Input
                          id="email"
                          type="email"
                          value={formData.email}
                          onChange={(e) => handleChange('email', e.target.value)}
                          placeholder="example@mail.ru"
                        />
                      </div>

                      <div className="space-y-2">
                        <Label>–§–æ—Ä–º–∞—Ç –∑–∞–Ω—è—Ç–∏—è *</Label>
                        <RadioGroup value={formData.format} onValueChange={(value) => handleChange('format', value)}>
                          <div className="flex items-center space-x-2">
                            <RadioGroupItem value="online" id="online" />
                            <Label htmlFor="online" className="font-normal cursor-pointer">
                              –û–Ω–ª–∞–π–Ω (WhatsApp, Zoom, Skype –∏ –¥—Ä.)
                            </Label>
                          </div>
                          <div className="flex items-center space-x-2">
                            <RadioGroupItem value="offline" id="offline" />
                            <Label htmlFor="offline" className="font-normal cursor-pointer">
                              –û—Ñ—Ñ–ª–∞–π–Ω (–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä)
                            </Label>
                          </div>
                        </RadioGroup>
                      </div>

                      <div className="space-y-2">
                        <Label htmlFor="topic">–¢–µ–º–∞ –∑–∞–Ω—è—Ç–∏—è *</Label>
                        <Input
                          id="topic"
                          required
                          value={formData.topic}
                          onChange={(e) => handleChange('topic', e.target.value)}
                          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏, —Ä–∞–±–æ—Ç–∞ —Å –≥–æ–ª–æ—Å–æ–º"
                        />
                      </div>

                      <div className="grid md:grid-cols-2 gap-4">
                        <div className="space-y-2">
                          <Label htmlFor="date">–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è –¥–∞—Ç–∞</Label>
                          <Input
                            id="date"
                            type="date"
                            value={formData.preferredDate}
                            onChange={(e) => handleChange('preferredDate', e.target.value)}
                            min={new Date().toISOString().split('T')[0]}
                          />
                        </div>
                        <div className="space-y-2">
                          <Label htmlFor="time">–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è</Label>
                          <select
                            id="time"
                            value={formData.preferredTime}
                            onChange={(e) => handleChange('preferredTime', e.target.value)}
                            className="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring"
                          >
                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</option>
                            {timeSlots.map((slot) => (
                              <option key={slot} value={slot}>{slot}</option>
                            ))}
                          </select>
                        </div>
                      </div>

                      <div className="space-y-2">
                        <Label htmlFor="message">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</Label>
                        <Textarea
                          id="message"
                          value={formData.message}
                          onChange={(e) => handleChange('message', e.target.value)}
                          placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö —Ü–µ–ª—è—Ö, –æ–ø—ã—Ç–µ, –æ—Å–æ–±—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö..."
                          rows={4}
                        />
                      </div>

                      <div className="bg-primary/5 rounded-lg p-4">
                        <p className="text-sm text-muted-foreground">
                          –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏ —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–Ω—è—Ç–∏—è.
                        </p>
                      </div>

                      <Button type="submit" size="lg" className="w-full">
                        –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                      </Button>
                    </form>
                  </DialogContent>
                </Dialog>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </section>
  );
};

export default IndividualLessonsSection;